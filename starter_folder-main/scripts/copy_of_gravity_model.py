# -*- coding: utf-8 -*-
"""Copy of Gravity_Model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rfBCCIIgMCZ9RJK9ALGeZlMLdBl_-4xR

log_value_ij: Natural logarithm of the value of shipments (exports) from exporter to importer.
log_rgdp_i: Natural logarithm of the real GDP of the exporter.
log_rgdp_j: Natural logarithm of the real GDP of the importer.
log_dist_ij: Natural logarithm of the distance between exporter and importer.
"""

# Load necessary library
library(dplyr)

# Set options to display full numbers instead of scientific notation
options(scipen = 999)

# Read the data from CSV file
data <- read.csv("/content/Gravity_Model_Problem_Set_2024.csv") # Adjust the path as needed

# Calculate mean values
mean_rgdp_i <- mean(data$rgdp_i, na.rm = TRUE)
mean_rgdp_j <- mean(data$rgdp_j, na.rm = TRUE)
mean_value_ij <- mean(data$value_ij, na.rm = TRUE)
mean_dist_ij <- mean(data$dist_ij, na.rm = TRUE)

# Print mean values with full numbers
cat("Mean Exporter GDP (rgdp_i):", format(mean_rgdp_i, scientific = FALSE), "\n")
cat("Mean Importer GDP (rgdp_j):", format(mean_rgdp_j, scientific = FALSE), "\n")
cat("Mean Value of Shipments (value_ij):", format(mean_value_ij, scientific = FALSE), "\n")
cat("Mean Distance (dist_ij):", format(mean_dist_ij, scientific = FALSE), "\n")

# Create log transformations
data$log_rgdp_i <- log(data$rgdp_i)
data$log_rgdp_j <- log(data$rgdp_j)
data$log_value_ij <- log(data$value_ij)
data$log_dist_ij <- log(data$dist_ij)

# View the first few rows of the updated dataset
head(data)

# Load necessary libraries
library(dplyr)

# Read the data
data <- read.csv("/content/Gravity_Model_Problem_Set_2024.csv") # Adjust the path as needed

# Assuming you want to model some variable (say 'y') as a function of others (say 'x1', 'x2', 'x3')
# Replace these with the actual column names from your dataset
# For example, let's assume:
# y = log of exports (log_value_ij)
# x1 = log of Exporter GDP (log_rgdp_i)
# x2 = log of Importer GDP (log_rgdp_j)
# x3 = log of Distance (log_dist_ij)

# Create log transformations if not already done
data$log_rgdp_i <- log(data$rgdp_i)
data$log_rgdp_j <- log(data$rgdp_j)
data$log_value_ij <- log(data$value_ij)
data$log_dist_ij <- log(data$dist_ij)

# Fit the model
model <- lm(log_value_ij ~ log_rgdp_i + log_rgdp_j + log_dist_ij, data = data)

# Get a summary of the model
model_summary <- summary(model)

# Print the summary
print(model_summary)

